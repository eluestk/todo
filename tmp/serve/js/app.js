/// <reference path="../../typings/jquery/jquery.d.ts" />

'use strict';

(function () {
  'use strict';

  $(function () {

    var $todolist = $('.js-todolist');
    var $inputText = $('.js-text');
    var $inputPriority = $('.js-priority:checked');
    var $inputDetail = $('.js-detail');
    var $numListed = $('.js-num-listed');
    var $numChecked = $('.js-num-checked');

    // 初期処理
    (function () {});

    // addボタンクリック
    $('.js-add').click(function () {
      if ($inputText.val()) {

        var item = app.common.setItem($inputText.val(), $inputPriority.val(), $inputDetail.val());
        localStorage.setItem(Date.now().toString(), JSON.stringify(item));

        $inputText.val('');
        $inputDetail.val('');
        refreshList();
        updateChecks();
      } else {
        console.log('未入力です');
      }
    });

    // checkboxクリック
    $todolist.click(function (event) {
      if ($(event.target).prop('checked')) {
        $(event.target).parent().css('text-decoration', 'line-through');
      } else {
        $(event.target).parent().css('text-decoration', 'none');
      }
      updateChecks();
    });

    // archiveボタンクリック
    $('.js-archive').click(function () {
      $('.js-checkbox:checked').parents('.js-list').remove();
      updateChecks();
    });

    // デバッグ用テストボタン
    $('.js-test').click(function () {
      var item = setItem('TEST', 1, 'very long text with unlimited length');
      localStorage.setItem(+new Date(), JSON.stringify(item));
    });

    function updateChecks() {
      $numListed.text($('.js-todolist > li').length);
      $numChecked.text($('.js-checkbox:not(:checked)').length);
    };

    function refreshList() {
      for (var i = 0; i < localStorage.length; i++) {
        var itemKey = localStorage.key(i);

        if (/[0-9]{13}/.test(itemKey)) {
          var item = JSON.parse(localStorage.getItem(itemKey));
          $todolist.append('<li class="js-list"><input type="checkbox" class="js-checkbox">' + item.title + '</input></li>');
        }
      }
    };
  });
})();
//# sourceMappingURL=data:application/json;base64,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QUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUMxRCxDQUFDOztBQUVGLGFBQVMsV0FBVyxHQUFHO0FBQ3JCLFdBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQzVDLFlBQUksT0FBTyxHQUFHLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7O0FBRWxDLFlBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUM3QixjQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUNyRCxtQkFBUyxDQUFDLE1BQU0sQ0FBQyxpRUFBaUUsR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQyxDQUFDO1NBQ3BIO09BQ0Y7S0FDRixDQUFDO0dBRUwsQ0FBQyxDQUFDO0NBQ0osQ0FBQSxFQUFHLENBQUMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uL3R5cGluZ3MvanF1ZXJ5L2pxdWVyeS5kLnRzXCIgLz5cclxuXHJcbihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgXHJcbiAgJChmdW5jdGlvbigpIHtcclxuIFxyXG4gICAgICBjb25zdCAkdG9kb2xpc3QgICAgICA9ICQoJy5qcy10b2RvbGlzdCcpO1xyXG4gICAgICBjb25zdCAkaW5wdXRUZXh0ICAgICA9ICQoJy5qcy10ZXh0Jyk7XHJcbiAgICAgIGNvbnN0ICRpbnB1dFByaW9yaXR5ID0gJCgnLmpzLXByaW9yaXR5OmNoZWNrZWQnKTtcclxuICAgICAgY29uc3QgJGlucHV0RGV0YWlsICAgPSAkKCcuanMtZGV0YWlsJyk7XHJcbiAgICAgIGNvbnN0ICRudW1MaXN0ZWQgICAgID0gJCgnLmpzLW51bS1saXN0ZWQnKTtcclxuICAgICAgY29uc3QgJG51bUNoZWNrZWQgICAgPSAkKCcuanMtbnVtLWNoZWNrZWQnKTtcclxuICAgICAgXHJcbiAgICAgIC8vIOWIneacn+WHpueQhlxyXG4gICAgICAoKCkgPT4ge1xyXG4gICAgICAgIFxyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIC8vIGFkZOODnOOCv+ODs+OCr+ODquODg+OCr1xyXG4gICAgICAkKCcuanMtYWRkJykuY2xpY2soKCkgPT4ge1xyXG4gICAgICAgIGlmKCRpbnB1dFRleHQudmFsKCkpIHtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgbGV0IGl0ZW0gPSBhcHAuY29tbW9uLnNldEl0ZW0oJGlucHV0VGV4dC52YWwoKSwgJGlucHV0UHJpb3JpdHkudmFsKCksICRpbnB1dERldGFpbC52YWwoKSk7XHJcbiAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShEYXRlLm5vdygpLnRvU3RyaW5nKCksIEpTT04uc3RyaW5naWZ5KGl0ZW0pKTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgJGlucHV0VGV4dC52YWwoJycpO1xyXG4gICAgICAgICAgJGlucHV0RGV0YWlsLnZhbCgnJyk7XHJcbiAgICAgICAgICByZWZyZXNoTGlzdCgpO1xyXG4gICAgICAgICAgdXBkYXRlQ2hlY2tzKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCfmnKrlhaXlipvjgafjgZknKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgLy8gY2hlY2tib3jjgq/jg6rjg4Pjgq9cclxuICAgICAgJHRvZG9saXN0LmNsaWNrKChldmVudCkgPT4ge1xyXG4gICAgICAgIGlmICgkKGV2ZW50LnRhcmdldCkucHJvcCgnY2hlY2tlZCcpKSB7XHJcbiAgICAgICAgICAkKGV2ZW50LnRhcmdldCkucGFyZW50KCkuY3NzKCd0ZXh0LWRlY29yYXRpb24nLCAnbGluZS10aHJvdWdoJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICQoZXZlbnQudGFyZ2V0KS5wYXJlbnQoKS5jc3MoJ3RleHQtZGVjb3JhdGlvbicsICdub25lJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHVwZGF0ZUNoZWNrcygpO1xyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIC8vIGFyY2hpdmXjg5zjgr/jg7Pjgq/jg6rjg4Pjgq9cclxuICAgICAgJCgnLmpzLWFyY2hpdmUnKS5jbGljaygoKSA9PiB7XHJcbiAgICAgICAgJCgnLmpzLWNoZWNrYm94OmNoZWNrZWQnKS5wYXJlbnRzKCcuanMtbGlzdCcpLnJlbW92ZSgpO1xyXG4gICAgICAgIHVwZGF0ZUNoZWNrcygpO1xyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIFxyXG4gICAgICAvLyDjg4fjg5Djg4PjgrDnlKjjg4bjgrnjg4jjg5zjgr/jg7NcclxuICAgICAgJCgnLmpzLXRlc3QnKS5jbGljaygoKSA9PiB7XHJcbiAgICAgICAgbGV0IGl0ZW0gPSBzZXRJdGVtKCdURVNUJywgMSwgJ3ZlcnkgbG9uZyB0ZXh0IHdpdGggdW5saW1pdGVkIGxlbmd0aCcpO1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCtuZXcgRGF0ZSgpLCBKU09OLnN0cmluZ2lmeShpdGVtKSk7XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgZnVuY3Rpb24gdXBkYXRlQ2hlY2tzKCkge1xyXG4gICAgICAgICRudW1MaXN0ZWQudGV4dCgkKCcuanMtdG9kb2xpc3QgPiBsaScpLmxlbmd0aCk7XHJcbiAgICAgICAgJG51bUNoZWNrZWQudGV4dCgkKCcuanMtY2hlY2tib3g6bm90KDpjaGVja2VkKScpLmxlbmd0aCk7XHJcbiAgICAgIH07XHJcbiAgICAgIFxyXG4gICAgICBmdW5jdGlvbiByZWZyZXNoTGlzdCgpIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxvY2FsU3RvcmFnZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgdmFyIGl0ZW1LZXkgPSBsb2NhbFN0b3JhZ2Uua2V5KGkpO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBpZiAoL1swLTldezEzfS8udGVzdChpdGVtS2V5KSkge1xyXG4gICAgICAgICAgICB2YXIgaXRlbSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oaXRlbUtleSkpO1xyXG4gICAgICAgICAgICAkdG9kb2xpc3QuYXBwZW5kKCc8bGkgY2xhc3M9XCJqcy1saXN0XCI+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwianMtY2hlY2tib3hcIj4nICsgaXRlbS50aXRsZSArICc8L2lucHV0PjwvbGk+Jyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9OyAgXHJcbiAgICBcclxuICB9KTtcclxufSkoKTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9