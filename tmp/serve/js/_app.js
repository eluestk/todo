/// <reference path="../../typings/jquery/jquery.d.ts" />
'use strict';

var app = app || {};

(function () {
  'use strict';

  $(function () {
    var _this = this;

    var $todolist = $('.js-todolist');
    var $inputText = $('.js-text');
    var $inputDetail = $('.js-detail');
    var $numListed = $('.js-num-listed');
    var $numChecked = $('.js-num-checked');

    // 初期処理
    var todos = new app.common.Todos();
    todos.todoItems.forEach(function (item) {
      return appendList(item);
    });
    updateChecks();

    // addボタンクリック
    $('.js-add').click(function () {
      if ($inputText.val()) {

        var todoItem = new app.common.Todo(Date.now().toString(), $inputText.val(), $('.js-priority:checked').val(), $inputDetail.val());
        appendList(todoItem);
        todos.add(todoItem);

        $inputText.val('');
        $inputDetail.val('');
        updateChecks();
      } else {
        console.log('未入力です');
      }
    });

    // checkboxクリック
    $todolist.click(function (event) {
      var $check = $(event.target);
      if ($check.prop('checked')) {
        $check.parent().css('text-decoration', 'line-through');
      } else {
        $check.parent().css('text-decoration', 'none');
      }
      updateChecks();
    });

    // archiveボタンクリック
    $('.js-archive').click(function () {
      // remove対象のidを基にlocalStorageから削除
      var removeList = [];
      var $checked = $('.js-checkbox:checked');

      $checked.each(function (index, checkbox) {
        removeList.push($(_this).val());
      });
      todos.remove(removeList);

      // 画面から削除
      $checked.parents('.js-todoitem').remove();
      updateChecks();
    });

    function updateChecks() {
      $numListed.text($('.js-todolist > li').length);
      $numChecked.text($('.js-checkbox:not(:checked)').length);
    };

    function appendList(todoItem) {
      var priorityClass = toPriorityClass(todoItem.priority);
      $todolist.append('\n            <li class="js-todoitem ' + priorityClass + '">\n              <input id="todoitem-' + todoItem.id + '" type="checkbox" class="js-checkbox" value="' + todoItem.id + '">\n              <label for="todoitem-' + todoItem.id + '">\n                <a href="detail.html?id=' + todoItem.id + '" title="' + todoItem.detail + '">' + todoItem.title + '</a>\n              </label>\n            </li>\n          ');
    }

    function toPriorityClass(priority) {
      var priorityClass = undefined;
      switch (priority) {
        case '0':
          priorityClass = 'priority-high';
          break;
        case '1':
          priorityClass = 'priority-med';
          break;
        case '2':
          priorityClass = 'priority-low';
          break;
      }
      return priorityClass;
    }
  });
})();
//# sourceMappingURL=data:application/json;base64,